// Code generated by MockGen. DO NOT EDIT.
// Source: status_checker.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStatusChecker is a mock of StatusChecker interface.
type MockStatusChecker struct {
	ctrl     *gomock.Controller
	recorder *MockStatusCheckerMockRecorder
}

// MockStatusCheckerMockRecorder is the mock recorder for MockStatusChecker.
type MockStatusCheckerMockRecorder struct {
	mock *MockStatusChecker
}

// NewMockStatusChecker creates a new mock instance.
func NewMockStatusChecker(ctrl *gomock.Controller) *MockStatusChecker {
	mock := &MockStatusChecker{ctrl: ctrl}
	mock.recorder = &MockStatusCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatusChecker) EXPECT() *MockStatusCheckerMockRecorder {
	return m.recorder
}

// CheckStatus mocks base method.
func (m *MockStatusChecker) CheckStatus(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckStatus", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckStatus indicates an expected call of CheckStatus.
func (mr *MockStatusCheckerMockRecorder) CheckStatus(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckStatus", reflect.TypeOf((*MockStatusChecker)(nil).CheckStatus), ctx)
}
